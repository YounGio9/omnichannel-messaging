// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  username String @unique
  password String
  Chat     Chat[]
}

enum Channel {
  MESSENGER
  WHATSAPP
  TELEGRAM
  SMS
}

enum ChatStatus {
  CLOSED
  OPEN
}

model Chat {
  id         String     @id @default(uuid())
  channel    Channel
  agent      User       @relation(fields: [agentId], references: [id])
  status     ChatStatus @default(OPEN)
  reason     String
  created_at DateTime   @default(now())
  closed_at  DateTime?
  agentId    String
  Message    Message[]
  Kpi        Kpi[]
}

model Customer {
  id         String   @id @default(uuid())
  name       String
  externalId String
  created_at DateTime @default(now())
}

enum SenderType {
  CUSTOMER
  AGENT
}

model Message {
  id         String     @id @default(uuid())
  chat       Chat       @relation(fields: [chatId], references: [id])
  chatId     String
  senderType SenderType
  sender_id  String
  content    String
  sentAt     DateTime   @default(now())
}

model Kpi {
  id                   String   @id @default(uuid())
  chatId               String
  chat                 Chat     @relation(fields: [chatId], references: [id])
  response_time        Int
  handling_time        Int
  conversationDuration Int
  created_at           DateTime @default(now())
}
